@model IEnumerable<IMS.Models.TraceDetail>
@using IMS.Comm
@{
  string thisTraceNo = ViewBag.TraceNo;
  IMS.DAL.IMSDBContext IMSdb = new IMS.DAL.IMSDBContext();
  DateTime bornDate = IMSdb.TraceMaster.Where(m => m.TraceNo == thisTraceNo).Select(x => x.BornDate).FirstOrDefault();
  DateTime bornDate_end = IMSdb.TraceMaster.Where(m => m.TraceNo == thisTraceNo).Select(x => x.BornDate_end).FirstOrDefault();
  int BornPigCnt = IMSdb.TraceMaster.Where(m => m.TraceNo == thisTraceNo).Select(m => m.PigCnt).FirstOrDefault();

  //豬隻異動作業彙總
  int pigChangeCnt = 0;
  if (IMSdb.TraceDetail.Where(m => m.TraceNo == thisTraceNo && m.WorkType == "DoPigChange").Any())
  {
    pigChangeCnt = IMSdb.TraceDetail.Where(m => m.TraceNo == thisTraceNo && m.WorkType == "DoPigChange").Sum(m => m.PigChangeCnt);
  }



  //飼料作業彙總
  bool isFeed = IMSdb.TraceDetail.Where(m => m.TraceNo == thisTraceNo && m.WorkType == "DoFeed" && m.WorkStage == (int)IMSEnum.WorkStage.Stage2).Any();
  double? feedSum = IMSdb.TraceDetail.Where(m => m.TraceNo == thisTraceNo && m.WorkType == "DoFeed" && m.WorkStage == (int)IMSEnum.WorkStage.Stage2).Sum(m => m.FeedValue);
  DateTime? lastFeedDate = IMSdb.TraceDetail.Where(m => m.TraceNo == thisTraceNo && m.WorkType == "DoFeed" && m.WorkStage == (int)IMSEnum.WorkStage.Stage2).OrderByDescending(x => x.WorkDate).Select(m => m.WorkDate).FirstOrDefault();

  //秤重作業彙總
  bool isInventory = IMSdb.TraceDetail.Where(m => m.TraceNo == thisTraceNo && m.WorkType == "DoWeight" && m.WorkStage == (int)IMSEnum.WorkStage.Stage2).Any();
  double? sumWeight = IMSdb.TraceDetail.Where(m => m.TraceNo == thisTraceNo && m.WorkType == "DoWeight" && m.WorkStage == (int)IMSEnum.WorkStage.Stage2).OrderByDescending(x => x.WorkDate).Select(m => m.InventoryWeight).FirstOrDefault();
  int? lastInventoryPigCnt = IMSdb.TraceDetail.Where(m => m.TraceNo == thisTraceNo && m.WorkType == "DoWeight" && m.WorkStage == (int)IMSEnum.WorkStage.Stage2).OrderByDescending(x => x.WorkDate).Select(m => m.InventoryPigCount).FirstOrDefault();
  DateTime lastInventoryDate = IMSdb.TraceDetail.Where(m => m.TraceNo == thisTraceNo && m.WorkType == "DoWeight" && m.WorkStage == (int)IMSEnum.WorkStage.Stage2).OrderByDescending(x => x.WorkDate).Select(m => m.WorkDate).FirstOrDefault();
  double avgWeight = Convert.ToDouble(sumWeight) / Convert.ToInt16(lastInventoryPigCnt);
  var lastInventoryDayAge = (lastInventoryDate - bornDate).TotalDays;
  var lastInventoryDayAge_end = (lastInventoryDate - bornDate_end).TotalDays;


  //離保育作業彙總
  int Stage2pigChangeCnt = 0;
  if (IMSdb.TraceDetail.Where(m => m.TraceNo == thisTraceNo && m.WorkType == "DoPigChange" && m.WorkStage == (int)IMSEnum.WorkStage.Stage2).Any())
  {
    Stage2pigChangeCnt = IMSdb.TraceDetail.Where(m => m.TraceNo == thisTraceNo && m.WorkType == "DoPigChange" && m.WorkStage == (int)IMSEnum.WorkStage.Stage2).Sum(m => m.PigChangeCnt);
  }
  DateTime Stage2LeaveDate = IMSdb.TraceDetail.Where(m => m.TraceNo == thisTraceNo && m.WorkType == "DoneStage2" && m.WorkStage == (int)IMSEnum.WorkStage.Stage2).OrderByDescending(x => x.WorkDate).Select(m => m.WorkDate).FirstOrDefault();
  var Stage2DayAge = (Stage2LeaveDate - bornDate).TotalDays;
  var Stage2DayAge_end = (Stage2LeaveDate - bornDate_end).TotalDays;



}

@using (Ajax.BeginForm("_TraceDetailsStage2", new { traceNo = ViewBag.TraceNo }, new AjaxOptions { UpdateTargetId = "traceDetailStage2-tool", HttpMethod = "Post", OnSuccess = "init();" }, new { enctype = "multipart/form-data" }))
{
  <div id="traceDetailStage2-tool">

    <div class="row" id="div_TopArea">


      <div class="col-md-4">
        <h4><b>@IMS.Resources.Resource.Stage2 作業資料彙整</b></h4>


        

        <div id="FeedData" class="well-sm well">

          @if (isFeed)
          {
            <h5>
              @IMS.Resources.Resource.Stage2 總飼料量:
              <span>@feedSum kg</span>
            </h5>
            <h5>
              最後飼料日期:
              <span>@lastFeedDate.Value.ToString("yyyy/MM/dd") </span>
            </h5>
          }
          else
          {
            <h5>
              <span class="text-danger">無飼料資料</span>
            </h5>
          }


        </div>

        <div id="InventoryData" class="well-sm well">

          @if (isInventory)
          {
            <h5>
              @IMS.Resources.Resource.Stage2 秤重重量 / 隻數:
              <span>@sumWeight kg/ @lastInventoryPigCnt 隻</span>
            </h5>


            <h5>
              最後秤重日期:
              <span>@lastInventoryDate.ToString("yyyy/MM/dd")  </span>
            </h5>
            <h5>
              平均重量:
              <span>@avgWeight.ToString("0.00") kg</span>

            </h5>
            <h5>
              最後秤重日齡:
              <span>@lastInventoryDayAge - @lastInventoryDayAge_end  天</span>
            </h5>
          }
          else
          {
            <h5>
              <span class="text-danger">無秤重資料</span>
            </h5>
          }

        </div>

        <div id="ChangeData" class="well-sm well">
          <h5>
            @IMS.Resources.Resource.Stage2 豬隻異動:
            @if (Stage2pigChangeCnt != 0)
            {

              if (Stage2pigChangeCnt > 0)
              {
                <span> 增加 @Stage2pigChangeCnt</span>
              }
              else
              {
                <span class="text-danger"> 減少 @(Math.Abs(Stage2pigChangeCnt))</span>
              }
            }
            else
            {
              <span class="text-info">無豬隻異動資料</span>
            }
          </h5>

        </div>


      </div>
      <div class="col-md-8">
        <h4><b>@IMS.Resources.Resource.Stage2 新增作業</b></h4>
        @Html.Action("_CreateTraceDetailStage2", new { traceNo = ViewBag.TraceNo })

      </div>
    </div>

    <h4>
      <b>
        作業紀錄
      </b>

      <span class="pull-right">
        <label class="checkbox-inline bg-default myCheckBox">
          <input type="checkbox" value="" class="ckb-default" checked>秤重
          <span class="badge">
            @IMSdb.TraceDetail.Where(m => m.TraceNo == thisTraceNo && m.WorkType == "DoWeight" && m.WorkStage == (int)IMSEnum.WorkStage.Stage2).Count()
          </span>
        </label>
        <label class="checkbox-inline bg-warning myCheckBox">
          <input type="checkbox" value="" class="ckb-warning" checked>飼料
          <span class="badge">
            @IMSdb.TraceDetail.Where(m => m.TraceNo == thisTraceNo && m.WorkType == "DoFeed" && m.WorkStage == (int)IMSEnum.WorkStage.Stage2).Count()
          </span>
        </label>
        <label class="checkbox-inline bg-success myCheckBox">
          <input type="checkbox" value="" class="ckb-success" checked>投藥
          <span class="badge">
            @IMSdb.TraceDetail.Where(m => m.TraceNo == thisTraceNo && m.WorkType == "DoMed" && m.WorkStage == (int)IMSEnum.WorkStage.Stage2).Count()
          </span>
        </label>
        <label class="checkbox-inline bg-danger myCheckBox">
          <input type="checkbox" value="" class="ckb-danger" checked>疫苗
          <span class="badge">
            @IMSdb.TraceDetail.Where(m => m.TraceNo == thisTraceNo && m.WorkType == "DoVaccine" && m.WorkStage == (int)IMSEnum.WorkStage.Stage2).Count()
          </span>
        </label>
        <label class="checkbox-inline bg-info myCheckBox">
          <input type="checkbox" value="" class="ckb-info" checked>其他
          <span class="badge">
            @IMSdb.TraceDetail.Where(m => m.TraceNo == thisTraceNo
            && m.WorkType != "DoWeight" && m.WorkType != "DoFeed" && m.WorkType != "DoMed" && m.WorkType != "DoVaccine"
            && m.WorkStage == (int)IMSEnum.WorkStage.Stage2).Count()
          </span>
        </label>
      </span>
    </h4>
    @*<hr class="underline-b" />*@




    <div class="row">
      <br />
      @foreach (var item in Model)
      {
        string cssClass = "panel-info";
        string panelTitle = "";
        if (item.WorkType == "DoFeed")
        {
          cssClass = "panel-warning";
          panelTitle = "飼料";
        }
        else if (item.WorkType == "DoWeight")
        {
          cssClass = "panel-default";
          panelTitle = "秤重";
        }
        else if (item.WorkType == "DoMed")
        {
          cssClass = "panel-success";
          panelTitle = "投藥";
        }
        else if (item.WorkType == "DoVaccine")
        {
          cssClass = "panel-danger";
          panelTitle = "疫苗";
        }
        else if (item.WorkType == "DoPigChange")
        {
          panelTitle = "豬隻異動";
        }
        else if (item.WorkType == "DoPhoto")
        {
          panelTitle = "影像";
        }
        else if (item.WorkType == "DoneStage2")
        {
          panelTitle = "離保育";
        }

        <div class="col-md-4 col-sm-6">
          <div class="panel @cssClass">
            <div class="panel-heading clearfix">
              <div class="panel-title pull-left panel-tool">
                <p><b>@panelTitle</b> </p>

              </div>
              <div class="btn-group pull-right">
                <button type="button" class="btn-default btnEdit btn" id="btnEdit" onclick="editMod(this)">
                  <li class="fa fa-pencil-square-o"></li>
                </button>
                <button type="button" class="btn-default btnSave btn" id="btnSave" onclick="noteditMod(this)">
                  <li class="fa fa-floppy-o"></li>
                </button><a href="@Url.Action("DeleteTraceDetail", new { seqNo = item.SeqNo })" class="btn btn-default " onclick="return confirm('確定要刪除嗎??')"><li class="fa fa-remove"></li></a>

                @*@Html.ActionLink(IMS.Resources.Resource.Comm_Delete, "DeleteTraceDetail", new { seqNo = item.SeqNo }, new { @class = "btn btn-default", onclick = "return confirm('您確定要刪除嗎??')" })*@

              </div>
            </div>
            <div class="panel-body workPanel">
              @Html.LabelFor(model => model.FirstOrDefault().WorkContent, htmlAttributes: new { @class = "control-label" })
              <span>:@item.WorkContent</span>
              @if (item.PhotoFile != null)
              {
                <a href="@Url.Action("GetImage",new { seqNo = item.SeqNo })" target="new">
                  <img src="@Url.Action("GetImage",new { seqNo = item.SeqNo })" class="img-responsive img-rounded" />
                </a>
              }
              @if (item.PigChangeCnt != 0)
              {
                <br />
                @Html.LabelFor(model => model.FirstOrDefault().PigChangeCnt, htmlAttributes: new { @class = "control-label" })

                if (@item.PigChangeCnt > 0)
                {
                  <span>: 增加 @item.PigChangeCnt</span>
                }
                else
                {
                  <span>: 減少 @(Math.Abs(item.PigChangeCnt))</span>
                }

              }


              @if (item.InventoryPigCount != null)
              {
                <br />
                @Html.LabelFor(model => model.FirstOrDefault().InventoryPigCount, htmlAttributes: new { @class = "control-label" })
                <span>:@item.InventoryPigCount</span>
              }

              @if (item.InventoryWeight != null)
              {
                <br />
                @Html.LabelFor(model => model.FirstOrDefault().InventoryWeight, htmlAttributes: new { @class = "control-label" })
                <span>:@item.InventoryWeight</span>
              }


              @if (item.WorkMemo != null)
              {
                <br />
                @Html.LabelFor(model => model.FirstOrDefault().WorkMemo, htmlAttributes: new { @class = "control-label" })
                <span>:@item.WorkMemo</span>
              }

              @if (item.FeedType != null)
              {
                <br />
                @Html.LabelFor(model => model.FirstOrDefault().FeedType, htmlAttributes: new { @class = "control-label" })
                <span>:@item.FeedType</span>
              }

              @if (item.FeedValue != null)
              {
                <br />
                @Html.LabelFor(model => model.FirstOrDefault().FeedValue, htmlAttributes: new { @class = "control-label" })
                <span>:@item.FeedValue kg</span>
              }

            </div>

            <div class="panel-footer">
              @Html.LabelFor(model => model.FirstOrDefault().WorkUser, htmlAttributes: new { @class = "control-label" })
              <span>:@item.WorkUser </span>
              <br />
              @Html.LabelFor(model => model.FirstOrDefault().WorkPlace, htmlAttributes: new { @class = "control-label" })
              <span>:@item.WorkPlace </span>
              <br />
              @Html.LabelFor(model => model.FirstOrDefault().WorkDate, htmlAttributes: new { @class = "control-label" }):@item.WorkDate.ToString("yyyy/MM/dd") @if (item.WorkDate_end.HasValue)
              {<span>-</span> @item.WorkDate_end.Value.ToString("yyyy/MM/dd")}

            </div>
          </div>
        </div>
      }
    </div>







  </div>
}
